name: CI

on:
  workflow_call:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build binary - ${{ matrix.binary_os_suffix }}-${{ matrix.binary_arch_suffix }}
    strategy:
      matrix:
        include:
          - runs_on_tag: macos-13
            binary_os_suffix: macos
            binary_arch_suffix: amd64
            crystal_build_static: false
          - runs_on_tag: macos-14
            binary_os_suffix: macos
            binary_arch_suffix: arm64
            architecture: arm
            crystal_build_static: false
          - runs_on_tag: ubuntu-22.04
            binary_os_suffix: linux
            binary_arch_suffix: arm64
            arch: aarch64
            distro: alpine_latest
            base_image: ''
            crystal_build_static: true
          - runs_on_tag: ubuntu-24.04
            binary_os_suffix: linux
            binary_arch_suffix: amd64
            arch: none
            distro: none
            base_image: amd64/alpine
            crystal_build_static: true
    runs-on: ${{ matrix.runs_on_tag }}
    env:
      FILENAME: hetzner-k3s-${{ matrix.binary_os_suffix }}-${{ matrix.binary_arch_suffix }}
      CRYSTAL_BUILD_STATIC: ${{ matrix.crystal_build_static }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          set-safe-directory: '/home/runner/work/hetzner-k3s/hetzner-k3s'

      - uses: crystal-lang/install-crystal@v1
        with:
          crystal: 1.14.1

      - if: matrix.binary_os_suffix == 'macos'
        name: Prepare macOS dependencies
        run: |
          brew install openssl@3
          brew unlink openssl@1.1 || true
          brew link --force --overwrite openssl@3

          export PATH="/usr/local/opt/openssl@3/bin:$PATH"
          export LDFLAGS="-L/usr/local/opt/openssl@3/lib"
          export CPPFLAGS="-I/usr/local/opt/openssl@3/include"
          export PKG_CONFIG_PATH="/usr/local/opt/openssl@3/lib/pkgconfig"

      - if: matrix.binary_os_suffix == 'macos'
        name: Build Crystal binary
        run: |
          set -eux

          shards install --without-development

          if [ "${CRYSTAL_BUILD_STATIC:-false}" = "true" ]; then
            crystal build src/hetzner-k3s.cr --release --static
          else
            crystal build src/hetzner-k3s.cr --release
          fi

          chmod +x hetzner-k3s
          cp hetzner-k3s "${FILENAME}"

      - if: matrix.binary_os_suffix == 'linux'
        name: Build Crystal binary
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          base_image: ${{ matrix.base_image }}
          shell: /bin/sh
          install: |
            apk update
            apk add --update --no-cache gcc gmp-dev gmp-static libevent-static musl-dev pcre-dev pcre2-dev pcre2-static libxml2-dev \
              libxml2-static openssl-dev openssl-libs-static tzdata yaml-static zlib-static xz-static \
              make git autoconf automake libtool patch libssh2-static libssh2-dev crystal shards gc-dev gc-static
          env: |
            FILENAME=${{ env.FILENAME }}
            CRYSTAL_BUILD_STATIC=${{ env.CRYSTAL_BUILD_STATIC }}
          run: |
            set -eux

            shards install --without-development

            if [ "${CRYSTAL_BUILD_STATIC:-false}" = "true" ]; then
              crystal build src/hetzner-k3s.cr --release --static
            else
              crystal build src/hetzner-k3s.cr --release
            fi

            chmod +x hetzner-k3s
            cp hetzner-k3s "${FILENAME}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.FILENAME }}
          path: ${{ env.FILENAME }}
          retention-days: 30
